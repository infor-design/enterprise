apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: k8s-orchestrate-
spec:
  arguments:
    parameters:
      - name: org_name
        value: ""
      - name: base_container_name
        value: ""
      - name: build_from
        value: ""
      - name: service_name
        value: ""
      - name: image_version
        value: ""
      - name: app_repo
        value: ""
      - name: manifests_repo
        value: ""
      - name: site
        value: ""

  entrypoint: ent-env-deploy-wf

  podGC:
    # Pod GC strategy must be one of the following:
    # * OnPodCompletion - delete pods immediately when pod is completed (including errors/failures)
    # * OnPodSuccess - delete pods immediately when pod is successful
    # * OnWorkflowCompletion - delete pods when workflow is completed
    # * OnWorkflowSuccess - delete pods when workflow is successful
    strategy: OnWorkflowSuccess

  templates:
    - name: ent-env-deploy-wf
      steps:
        - - name: build
            template: build
            arguments:
              parameters:
                - name: org_name
                  value: "{{workflow.parameters.org_name}}"
                - name: base_container_name
                  value: "{{workflow.parameters.base_container_name}}"
                - name: image_version
                  value: "{{workflow.parameters.image_version}}"
                - name: build_from
                  value: "{{workflow.parameters.build_from}}"
                - name: app_repo
                  value: "{{workflow.parameters.app_repo}}"

        - - name: push
            template: push
            arguments:
              parameters:
                - name: service_name
                  value: "{{workflow.parameters.service_name}}"
                - name: image_version
                  value: "{{workflow.parameters.image_version}}"
                - name: manifests_repo
                  value: "{{workflow.parameters.manifests_repo}}"

        - - name: publish-docs
            template: publish-docs
            arguments:
              parameters:
                - name: build_from
                  value: "{{workflow.parameters.build_from}}"
                - name: app_repo
                  value: "{{workflow.parameters.app_repo}}"
                - name: site
                  value: "{{workflow.parameters.site}}"

    - name: build
      inputs:
        parameters:
          - name: org_name
          - name: image_version
          - name: base_container_name
          - name: build_from
          - name: app_repo

      resource:
        action: create
        successCondition: status.succeeded > 0
        failureCondition: status.failed > 0
        manifest: |
          apiVersion: batch/v1
          kind: Job
          metadata:
            generateName: build-
          spec:
            ttlSecondsAfterFinished: 300
            backoffLimit: 0
            template:
              metadata:
                name: ent-env-deploy
              spec:
                shareProcessNamespace: true
                restartPolicy: Never
                nodeSelector: 
                  eks.amazonaws.com/nodegroup: heavy
                containers:
                  - name: docker-cmds
                    image: hookandloop/ent-env-worker:0.0.1
                    imagePullPolicy: Always
                    resources:
                      requests:
                        cpu: 500m
                        memory: 3Gi
                    env:
                      - name: DOCKER_HOST
                        value: tcp://localhost:2375
                      - name: IMAGE_LIBRARY_USER
                        valueFrom:
                          secretKeyRef:
                            name: image-library-creds
                            key: user
                      - name: IMAGE_LIBRARY_PASS
                        valueFrom:
                          secretKeyRef:
                            name: image-library-creds
                            key: pass
                      - name: GITHUB_ACCESS_TOKEN
                        valueFrom:
                          secretKeyRef:
                            name: github-access-token
                            key: token
                      - name: ORG_NAME
                        value: "{{inputs.parameters.org_name}}"
                      - name: IMAGE_VERSION
                        value: "{{inputs.parameters.image_version}}"
                      - name: BASE_CONTAINER_NAME
                        value: "{{inputs.parameters.base_container_name}}"
                      - name: BUILD_FROM
                        value: "{{inputs.parameters.build_from}}"
                      - name: APP_REPO
                        value: "{{inputs.parameters.app_repo}}"
                    command: ["/bin/bash"]
                    args: ["-c", ". ./build_push_image.sh"]
                  - name: dind-daemon
                    image: "docker:dind"
                    imagePullPolicy: Always
                    command: ["dockerd", "--host", "tcp://127.0.0.1:2375"]
                    resources:
                      requests:
                        cpu: 500m
                        memory: 2Gi
                    securityContext:
                        privileged: true
                    volumeMounts:
                      - name: docker-storage
                        mountPath: /var/lib/docker
                volumes:
                  - name: docker-storage
                    emptyDir: {}

      outputs:
        parameters:
          - name: job-name
            valueFrom:
              jsonPath: "{.metadata.name}"
          - name: job-uid
            valueFrom:
              jsonPath: "{.metadata.uid}"

    - name: push
      inputs:
        parameters:
          - name: service_name
          - name: image_version
          - name: manifests_repo

      resource:
        action: create
        successCondition: status.succeeded > 0
        failureCondition: status.failed > 0
        manifest: |
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: ent-env-build-push-manifests
          spec:
            ttlSecondsAfterFinished: 300
            backoffLimit: 0
            template:
              spec:
                restartPolicy: Never
                volumes:
                  - name: gitconfig
                    secret:
                      secretName: gitconfig
                      defaultMode: 0600
                containers:
                  - name: worker
                    image: hookandloop/ent-env-worker:0.0.1
                    imagePullPolicy: Always
                    volumeMounts:
                      - name: gitconfig
                        readOnly: true
                        mountPath: "/usr/src/secrets"
                    resources:
                      requests:
                        cpu: 500m
                        memory: 3Gi
                    env:
                      - name: GITHUB_ACCESS_TOKEN
                        valueFrom:
                          secretKeyRef:
                            name: github-access-token
                            key: token
                      - name: SERVICE_NAME
                        value: "{{inputs.parameters.service_name}}"
                      - name: IMAGE_VERSION
                        value: "{{inputs.parameters.image_version}}"
                      - name: MANIFESTS_REPO
                        value: "{{inputs.parameters.manifests_repo}}"
                    command: ["/bin/bash"]
                    args: ["-c", ". ./build_push_manifests.sh"]
                    lifecycle:
                      postStart:
                        exec:
                          command:
                            - /bin/sh
                            - -c
                            - cp /usr/src/secrets/gitconfig /root/.gitconfig

    - name: publish-docs
      inputs:
        parameters:
          - name: build_from
          - name: app_repo
          - name: site

      resource:
        action: create
        successCondition: status.succeeded > 0
        failureCondition: status.failed > 0
        manifest: |
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: ent-env-publish-docs
          spec:
            ttlSecondsAfterFinished: 300
            backoffLimit: 0
            template:
              spec:
                restartPolicy: Never
                nodeSelector: 
                  eks.amazonaws.com/nodegroup: heavy
                containers:
                  - name: enterprise-publish-docs
                    image: hookandloop/enterprise-publish-docs:0.0.1
                    imagePullPolicy: Always
                    resources:
                      requests:
                        cpu: 500m
                        memory: 3Gi
                    env:
                      - name: GITHUB_ACCESS_TOKEN
                        valueFrom:
                          secretKeyRef:
                            name: github-access-token
                            key: token
                      - name: DOCS_API_KEY
                        valueFrom:
                          secretKeyRef:
                            name: docs-api-key
                            key: token
                      - name: DOCS_API_URL
                        value: "https://old.design.infor.com"
                      - name: SITE
                        value: "{{inputs.parameters.site}}"
                      - name: BUILD_FROM
                        value: "{{inputs.parameters.build_from}}"
                      - name: APP_REPO
                        value: "{{inputs.parameters.app_repo}}"
                    command: ["/bin/bash"]
                    args: ["-c", ". ./run.sh"]
                restartPolicy: Never
